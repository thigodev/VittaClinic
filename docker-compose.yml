version: '3.8'

services:
  web:
    build: .
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql-master
      - mysql-slave
    networks:
      - app-network

  # MySQL Master
  mysql-master:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: vitta1
      MYSQL_USER: admvitta
      MYSQL_PASSWORD: 123
      MYSQL_REPLICATION_USER: replication_user  # Usuário para replicação
      MYSQL_REPLICATION_PASSWORD: replication_password  # Senha para replicação
    volumes:
      - mysql-master-data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - app-network
    command: --server-id=1 --log-bin=mysql-bin --binlog-do-db=vitta1  # Habilita logs binários e define o ID do servidor

  # MySQL Slave
  mysql-slave:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: vitta1
      MYSQL_USER: admvitta
      MYSQL_PASSWORD: 123
      MYSQL_REPLICATION_USER: replication_user
      MYSQL_REPLICATION_PASSWORD: replication_password
    volumes:
      - mysql-slave-data:/var/lib/mysql
    networks:
      - app-network
    depends_on:
      - mysql-master
    command: --server-id=2 --relay-log=relay-bin --log-bin=mysql-bin --binlog-do-db=vitta1  # Habilita logs binários e define o ID do servidor slave

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql-master
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - "8081:80"
    networks:
      - app-network

  # Nginx
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - app-network

volumes:
  mysql-master-data:
  mysql-slave-data:

networks:
  app-network:
